extends ../common/layout 

block content
  <div class="content d-flex flex-column flex-column-fluid" id="kt_content">
    <div class="d-flex flex-column-fluid">
      <!--begin::Container-->
      <div class="container">
        <!--begin::Notice-->
        <div class="alert alert-custom alert-white alert-shadow gutter-b alert-text" role="alert">
          <div class="alert-icon">
            <span class="svg-icon svg-icon-primary svg-icon-xl">
              <!-- SVG Icon -->
            </span>
          </div>
          <div class="alert-text">
            <div class="d-flex align-items-baseline mr-5">
              <h2 class="subheader-title text-dark font-weight-bold my-2 mr-3">Pre Schedule Visitor Management</h2>
              <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold my-2 p-0">
                <li class="breadcrumb-item"><a href="" class="text-muted">Manage</a></li>
                <li class="breadcrumb-item"><a href="" class="text-muted">List</a></li>
              </ul>
            </div>
          </div>
        </div>
        <!--end::Notice-->

        if message != ''
          <div class="alert alert-success" role="alert">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>#{message}</strong>
          </div>

        <!--begin::Card-->
        <div class="card card-custom">
          <div class="card-header" style="background:rgb(240,240,240)">
            <div class="card-title">
              <span class="card-icon">
                <i class="fa fa-cog"></i>
              </span>
              <h3 class="card-label">#{title}</h3>
            </div>
            <div class="card-toolbar">
              <button id="openDrawerBtn" class="btn btn-success font-weight-bolder">
                <i class="la la-plus"></i>Add A Preschedule
              </button>
            </div>
          </div>
          <div class="card-body">
            <!-- Search Bar -->
            <div class="mb-4">
              input#searchInput.form-control(type="text" placeholder="Search by Full Name...")
            </div>

            <!-- Data Table -->
            <table id="visitorTable" class="table table-bordered table-hover">
              <thead>
                <tr>
                  <th>Full Name</th>
                  <th>Mobile</th>
                  <th>From</th>
                  <th>Card Number</th>
                  <th>Purpose</th>
                  <th>Status</th>
                  <th>Date Scheduled</th>
                </tr>
              </thead>
              <tbody></tbody>
            </table>

            <!-- Pagination -->
            <div class="d-flex justify-content-center mt-4">
              <nav id="pagination"></nav>
            </div>
          </div>
        </div>
        <!--end::Card-->

        <!-- Drawer -->
        <div class="drawer">
          <div class="drawer-header">
            <h5>Add New Visitor</h5>
            <button class="close-btn" id="closeDrawerBtn">&times;</button>
          </div>
          <div class="drawer-content">
            <form id="drawerForm">
              <div class="form-group">
                <label for="fullname">Full Name</label>
                <input type="text" id="fullname" class="form-control" placeholder="Enter Full Name">
              </div>
              <div class="form-group">
                <label for="mobile">Mobile</label>
                <input type="text" id="mobile" class="form-control" placeholder="Enter Mobile">
              </div>
              <div class="form-group">
                <label for="form">From</label>
                <input type="text" id="form" class="form-control" placeholder="Enter From">
              </div>
              <div class="form-group">
                <label for="purpose">Purpose</label>
                <input type="text" id="purpose" class="form-control" placeholder="Enter Purpose">
              </div>
              <div class="form-group">
                <label for="pre_schedule_date">Date Scheduled</label>
                <input type="date" id="pre_schedule_date" class="form-control">
              </div>
              <button type="submit" class="btn btn-primary btn-block">Submit</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
  script.
    document.addEventListener("DOMContentLoaded", () => {
      const tableBody = document.querySelector("#visitorTable tbody");
      const searchInput = document.querySelector("#searchInput");
      const paginationNav = document.querySelector("#pagination");
      const drawer = document.querySelector(".drawer");
      const form = document.getElementById("drawerForm");
      const openDrawerButton = document.getElementById("openDrawerBtn");
      const closeDrawerButton = document.getElementById("closeDrawerBtn");

      // Open Drawer
      openDrawerButton.addEventListener("click", () => {
        drawer.classList.add("open");
      });

      // Close Drawer
      closeDrawerButton.addEventListener("click", () => {
        drawer.classList.remove("open");
        form.reset(); // Clear the form when closing the drawer
      });

      // Fetch and Populate Visitors
      const fetchVisitors = (page = 1, search = "") => {
        axios.get(`/schedule/pre-schedule-visitor-ajax-datatable?page=${page}&search=${search}`).then((response) => {
          const { data, pages } = response.data;
          tableBody.innerHTML = "";

          // Populate table
          data.forEach((visitor) => {
            tableBody.innerHTML += `
              <tr>
                <td>${visitor.fullname}</td>
                <td>${visitor.mobile}</td>
                <td>${visitor.from || "N/A"}</td>
                <td>${visitor.cardno || "N/A"}</td>
                <td>${visitor.purpose || "N/A"}</td>
                <td>${visitor.status == 1 ? "Active" : "Inactive"}</td>
                <td>${new Date(visitor.pre_schedule_date).toLocaleDateString()}</td>
              </tr>
            `;
          });

          // Setup pagination
          paginationNav.innerHTML = "";
          for (let i = 1; i <= pages; i++) {
            paginationNav.innerHTML += `
              <button class="btn btn-outline-primary me-2 page-btn" data-page="${i}">${i}</button>
            `;
          }

          document.querySelectorAll(".page-btn").forEach((button) => {
            button.addEventListener("click", () => {
              const page = button.getAttribute("data-page");
              fetchVisitors(page, search);
            });
          });
        });
      };

      // Initial fetch
      fetchVisitors();

      // Search functionality
      searchInput.addEventListener("input", (e) => {
        const searchQuery = e.target.value;
        fetchVisitors(1, searchQuery);
      });

      // Submit Drawer Form
      form.addEventListener("submit", (e) => {
        e.preventDefault();

        const formData = {
          fullname: document.getElementById("fullname").value,
          mobile: document.getElementById("mobile").value,
          from: document.getElementById("form").value,
          purpose: document.getElementById("purpose").value,
          pre_schedule_date: document.getElementById("pre_schedule_date").value,
        };

        axios
          .post("/schedule/save", formData)
          .then(() => {
            alert("Visitor added successfully!");
            drawer.classList.remove("open");
            form.reset(); // Clear form fields after submission
            fetchVisitors(); // Refresh the table
          })
          .catch((err) => {
            console.error(err);
            alert("An error occurred while adding the visitor.");
          });
      });
    });

  style.
    .drawer {
      position: fixed;
      top: 0;
      right: 0;
      height: 100%;
      width: 400px;
      background-color: #fff;
      box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
      overflow-y: auto;
      z-index: 1050;
      transform: translateX(100%);
      transition: transform 0.3s ease-in-out;
    }
    .drawer.open {
      transform: translateX(0);
    }
